{"version":3,"sources":["webpack:///../theme/src/hooks/use-recent-posts.js","webpack:///../node_modules/core-js/modules/_string-html.js","webpack:///../node_modules/core-js/modules/es6.string.link.js","webpack:///../theme/src/components/widgets/recent-posts/post-card.js","webpack:///../theme/src/pages/blog.jsx"],"names":["getPosts","queryResult","allMdx","edges","map","node","useRecentPosts","$export","fails","defined","quot","createHTML","string","tag","attribute","value","S","String","p1","replace","module","exports","NAME","exec","O","P","F","test","toLowerCase","split","length","url","this","banner","date","excerpt","link","title","sx","variant","to","className","color","h4","mt","display","flexGrow","mb","alt","src","borderRadius","ml","data","posts","description","backgroundColor","flexDirection","py","div","gridAutoRows","gridGap","gridTemplateColumns","post","frontmatter","category","fields","key","id","slug","pageQuery"],"mappings":"6IAEaA,EAAW,SAAAC,GAAgB,IAAD,EACGA,EAAhCC,OAD6B,gBACJ,GADI,GACnBC,MAElB,YAHqC,MACX,GADW,GAEXC,KAAI,qBAAGC,SAmCpBC,IA/BQ,WACrB,IAAML,EAAW,OA2BjB,OADoBD,EAASC,K,qBCnC/B,IAAIM,EAAU,EAAQ,QAClBC,EAAQ,EAAQ,QAChBC,EAAU,EAAQ,QAClBC,EAAO,KAEPC,EAAa,SAAUC,EAAQC,EAAKC,EAAWC,GACjD,IAAIC,EAAIC,OAAOR,EAAQG,IACnBM,EAAK,IAAML,EAEf,MADkB,KAAdC,IAAkBI,GAAM,IAAMJ,EAAY,KAAOG,OAAOF,GAAOI,QAAQT,EAAM,UAAY,KACtFQ,EAAK,IAAMF,EAAI,KAAOH,EAAM,KAErCO,EAAOC,QAAU,SAAUC,EAAMC,GAC/B,IAAIC,EAAI,GACRA,EAAEF,GAAQC,EAAKZ,GACfJ,EAAQA,EAAQkB,EAAIlB,EAAQmB,EAAIlB,GAAM,WACpC,IAAImB,EAAO,GAAGL,GAAM,KACpB,OAAOK,IAASA,EAAKC,eAAiBD,EAAKE,MAAM,KAAKC,OAAS,KAC7D,SAAUN,K,2hBCfhB,EAAQ,OAAR,CAA0B,QAAQ,SAAUb,GAC1C,OAAO,SAAcoB,GACnB,OAAOpB,EAAWqB,KAAM,IAAK,OAAQD,Q,8FCA1B,oBAAGE,EAAH,EAAGA,OAAQC,EAAX,EAAWA,KAAMC,EAAjB,EAAiBA,QAASC,EAA1B,EAA0BA,KAAMC,EAAhC,EAAgCA,MAAhC,OACb,YAAC,IAAD,CAAMC,GAAI,CAAEC,QAAQ,mBAAsBC,GAAIJ,GAC5C,oBAAMK,UAAU,UAAUH,GAAI,CAAEI,MAAM,cACnCR,GAGH,YAAC,IAAOS,GAAR,CAAWL,GAAI,CAAEM,GAAI,IAAMP,GAE3B,mBAAKC,GAAI,CAAEO,QAAQ,OAASC,SAAU,EAAGF,GAAI,EAAGG,GAAI,IAClD,wBACGZ,EADH,IACY,sCAGXF,GACC,mBACEe,IAAI,iBACJC,IAAKhB,EACLK,GAAI,CAAEY,aAAa,MAAQC,GAAI,S,kCCrBzC,+JAYe,sBAAe,IAAZC,EAAW,EAAXA,KACVC,EAAQrD,YAASoD,GACvB,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CACEf,MAAM,oBACNiB,YAAY,qDAGd,YAAC,IAAD,CACEhB,GAAI,CACFiB,gBAAgB,oBAChBC,cAAc,SACdV,SAAU,EACVW,GAAI,IAGN,YAAC,IAAD,CAAWnB,GAAI,CAAEQ,SAAU,IACzB,oCACA,YAAC,IAAOY,IAAR,CACEpB,GAAI,CACFO,QAAQ,OACRc,aAAa,MACbC,QAAS,EACTC,oBAAqB,CAAC,GAAD,uBAGtBR,EAAMjD,KAAI,SAAA0D,GAAI,OACb,YAAC,IAAD,CACE7B,OAAQ6B,EAAKC,YAAY9B,OACzB+B,SAAUF,EAAKG,OAAOD,SACtB9B,KAAM4B,EAAKC,YAAY7B,KACvBC,QAAS2B,EAAK3B,QACd+B,IAAKJ,EAAKG,OAAOE,GACjB/B,KAAM0B,EAAKG,OAAOG,KAClB/B,MAAOyB,EAAKC,YAAY1B,cAOlC,YAAC,IAAD,QAKC,IAAMgC,EAAS","file":"component---theme-src-pages-blog-jsx-bd9a229f245743611d01.js","sourcesContent":["import { useStaticQuery, graphql } from 'gatsby'\n\nexport const getPosts = queryResult => {\n  const { allMdx: { edges = [] } = {} } = queryResult\n  const recentPosts = edges.map(({ node }) => node)\n  return recentPosts\n}\n\nconst useRecentPosts = () => {\n  const queryResult = useStaticQuery(\n    graphql`\n      query RecentPosts {\n        allMdx(limit: 2, sort: { order: DESC, fields: [frontmatter___date] }) {\n          edges {\n            node {\n              excerpt(pruneLength: 255)\n              fields {\n                category\n                id\n                slug\n              }\n              frontmatter {\n                banner\n                date(formatString: \"MMMM DD, YYYY\")\n                description\n                slug\n                title\n              }\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const recentPosts = getPosts(queryResult)\n  return recentPosts\n}\n\nexport default useRecentPosts\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n","/** @jsx jsx */\nimport { jsx, Styled } from 'theme-ui'\nimport { Link } from 'gatsby'\n\nexport default ({ banner, date, excerpt, link, title }) => (\n  <Link sx={{ variant: `styles.PostCard` }} to={link}>\n    <time className='created' sx={{ color: `textMuted` }}>\n      {date}\n    </time>\n\n    <Styled.h4 sx={{ mt: 1 }}>{title}</Styled.h4>\n\n    <div sx={{ display: `flex`, flexGrow: 1, mt: 0, mb: 1 }}>\n      <span>\n        {excerpt} <em>Read more &rarr;</em>\n      </span>\n\n      {banner && (\n        <img\n          alt='post thumbnail'\n          src={banner}\n          sx={{ borderRadius: `4px`, ml: 2 }}\n        />\n      )}\n    </div>\n  </Link>\n)\n","/** @jsx jsx */\nimport { Container, jsx, Styled } from 'theme-ui'\nimport { Flex } from '@theme-ui/components'\nimport { graphql } from 'gatsby'\n\nimport { getPosts } from '../hooks/use-recent-posts'\n\nimport Footer from '../components/footer'\nimport Layout from '../components/layout'\nimport PostCard from '../components/widgets/recent-posts/post-card'\nimport SEO from '../components/seo'\n\nexport default ({ data }) => {\n  const posts = getPosts(data)\n  return (\n    <Layout>\n      <SEO\n        title='Recent Blog Posts'\n        description='An overview of recent articles posted to my blog'\n      />\n\n      <Flex\n        sx={{\n          backgroundColor: `colors.background`,\n          flexDirection: `column`,\n          flexGrow: 1,\n          py: 3\n        }}\n      >\n        <Container sx={{ flexGrow: 1 }}>\n          <h1>Blog Posts</h1>\n          <Styled.div\n            sx={{\n              display: `grid`,\n              gridAutoRows: `1fr`,\n              gridGap: 4,\n              gridTemplateColumns: [``, ``, `repeat(2, 1fr)`]\n            }}\n          >\n            {posts.map(post => (\n              <PostCard\n                banner={post.frontmatter.banner}\n                category={post.fields.category}\n                date={post.frontmatter.date}\n                excerpt={post.excerpt}\n                key={post.fields.id}\n                link={post.fields.slug}\n                title={post.frontmatter.title}\n              />\n            ))}\n          </Styled.div>\n        </Container>\n      </Flex>\n\n      <Footer />\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query QueryRecentPosts {\n    allMdx(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          excerpt(pruneLength: 255)\n          fields {\n            category\n            slug\n            id\n          }\n          frontmatter {\n            banner\n            date(formatString: \"MMMM DD, YYYY\")\n            description\n            slug\n            title\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}